import fs from "node:fs";
import path from "node:path";

// biome-ignore lint/suspicious/noExplicitAny: <explanation>
function convertToDesiredFormat(obj: any, indent = 4): string {
	if (obj === null || obj === undefined) {
		return "";
	}

	let result = "";
	const indentation = " ".repeat(indent);

	// オブジェクトの各キーを処理
	for (const [key, value] of Object.entries(obj)) {
		// キーを出力
		result += `${indentation}${key} = `;

		if (Array.isArray(value)) {
			// 配列の場合
			result += "[\n";
			for (let i = 0; i < value.length; i++) {
				if (typeof value[i] === "object" && value[i] !== null) {
					result += `${indentation}  {\n`;
					result += convertToDesiredFormat(value[i], indent + 4);
					result += `${indentation}  }`;
				} else {
					result += `${indentation}  ${JSON.stringify(value[i])}`;
				}
				if (i < value.length - 1) {
					result += ",";
				}
				result += "\n";
			}
			result += `${indentation}]\n`;
		} else if (typeof value === "object" && value !== null) {
			// ネストされたオブジェクトの場合
			result += "{\n";
			result += convertToDesiredFormat(value, indent + 2);
			result += `${indentation}}\n`;
		} else {
			// プリミティブ値の場合
			if (typeof value === "string") {
				result += `"${value}"\n`;
			} else {
				result += `${value}\n`;
			}
		}
	}

	return result;
}

function writeTerraformFile(settings: object, outputPath: string) {
	const data = `# Generated by cognito-convert

resource "awscc_cognito_managed_login_branding" "brand" {
  user_pool_id = aws_cognito_user_pool.user_pool.id
  client_id = split("|", awscc_cognito_user_pool_client.pool_client.id)[1]

  settings = jsonencode({
${convertToDesiredFormat(settings)}  })
}
`;

	const dir = path.dirname(outputPath);
	if (!fs.existsSync(dir)) {
		fs.mkdirSync(dir, { recursive: true });
	}
	fs.writeFileSync(outputPath, data, "utf8");
}

export { writeTerraformFile };
